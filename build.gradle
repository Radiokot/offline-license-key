plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.dokka' version '1.7.10'
}

apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka'

group 'ua.com.radiokot'
version '1.0.0-rc.6'

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'offline-license-key'

            pom {
                name = 'Offline License Key'
                description = 'Issue and verify standalone license keys unlocking paid features, without a license server'

                organization {
                    name = 'Oleg Koretsky'
                    url = 'https://radiokot.com.ua'
                }

                licenses {
                    license {
                        name = 'GPL-3.0 license'
                        url = 'https://www.gnu.org/licenses/gpl-3.0-standalone.html'
                        comments = 'GNU General Public License, Version 3'
                        distribution = 'repo'
                    }
                }
            }

            from components.java
        }
    }
}

wrapper {
    gradleVersion = "7.5"
    distributionType = Wrapper.DistributionType.BIN
}

repositories {
    mavenCentral()
}

dependencies {
    // The last 3.X.X version ensures compatibility with Android running Java 7.
    implementation('com.auth0:java-jwt:3.19.2') {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
    // Jackson 2.13.0 ensures compatibility with Android SDK version 21 and higher.
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'

    testImplementation 'org.jetbrains.kotlin:kotlin-test'
}

test {
    useJUnitPlatform()
}

compileKotlin.kotlinOptions.jvmTarget = '1.8'
compileTestKotlin.kotlinOptions.jvmTarget = '1.8'

java {
    withSourcesJar()
    withJavadocJar()

    sourceCompatibility JavaVersion.VERSION_1_8
}

dokkaJavadoc {
    moduleName = 'Offline License Key'
    outputDirectory = javadoc.destinationDir

    dokkaSourceSets {
        configureEach {
            includes.from('dokka-module.md')
            perPackageOption {
                matchingRegex.set('java.util.*')
                suppress.set(true)
            }
        }
    }
}

javadoc {
    // Make it use Dokka output.
    dependsOn(dokkaJavadoc)
    exclude '*'
}
